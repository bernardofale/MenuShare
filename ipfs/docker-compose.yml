version: '3.4'
services:
  ipfs1:
    container_name: ipfs1
    image: ipfs/kubo
    restart: always
    ports:
      - "4001:4001" # ipfs swarm 
      - "5001:5001" # ipfs api 
      - "8081:8080" # ipfs gateway 
    volumes:
      - ./compose/ipfs/ipfs1:/data/ipfs
      - ./shared/:/root/shared/:rw
    entrypoint: >
      sh -c '
         ipfs init;
         ipfs daemon &
         ./root/shared/ipfs-bootstrap.sh &
         wait
       '

  ipfs2:
    container_name: ipfs2
    image: ipfs/kubo
    restart: always
    ports:
      - "4002:4001" # ipfs swarm 
      - "5002:5001" # ipfs api 
      - "8082:8080" # ipfs gateway 
    volumes:
      - ./compose/ipfs/ipfs2:/data/ipfs
      - ./shared/:/root/shared/:rw
    entrypoint: >
      sh -c '
         ipfs init;
         ipfs daemon &
         ./root/shared/ipfs-bootstrap.sh &
         wait
       '

  ipfs3:
    container_name: ipfs3
    image: ipfs/kubo
    restart: always
    ports:
      - "4003:4001" # ipfs swarm 
      - "5003:5001" # ipfs api 
      - "8083:8080" # ipfs gateway 
    volumes:
      - ./compose/ipfs/ipfs3:/data/ipfs
      - ./shared/:/root/shared/:rw
    entrypoint: >
      sh -c '
         ipfs init;
         ipfs daemon &
         ./root/shared/ipfs-bootstrap.sh &
         wait
       '

  #cluster:
  #  container_name: ${clustername}
  #  image: ipfs/ipfs-cluster
  #  restart: always
  #  depends_on:
  #    - ipfs1
  #    - ipfs2
  #    - ipfs3
  #  environment:
  #    CLUSTER_PEERNAME: ${clustername}
  #    CLUSTER_SECRET: ${sharedkey}
  #    #CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs1/tcp/5001  #,/dns4/ipfs2/tcp/5001,/dns4/ipfs3/tcp/5001
  #    CLUSTER_CRDT_TRUSTEDPEERS: '*' # Trust all peers in Cluster
  #    CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # expose API
  #    CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
  #  ports:
  #    - "9094:9094" # http api
  #    - "9095:9095" # proxy api
  #    - "9096:9096" # cluster swarm, other peers connect via this port
  #  volumes:
  #    - ./compose/ipfs/${clustername}:/data/ipfs-cluster
  #    - ./shared/:/root/shared/:rw
  #  entrypoint: ["/root/shared/entrypoint-cluster.sh"]     # VM: remove entrypoint to deploy
